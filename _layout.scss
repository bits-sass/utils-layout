/* ==========================================================================
   Layout utilities
   ========================================================================== */

/**
 * Variables
 *
 * It is recommended to override these.
 *
 * 1. Utility namespace.
 */

$bits-utils-ns: 'bits-' !default; /* 1 */

/**
 * 1. Margin used by `u-objLeft` and `u-objRight`.
 */

$bits-layout-obj-margin: 10px !default; /* 1 */

/* -------------------------------------------------------------------------- */

/**
 * Micro clearfix, as per:
 * css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 */

.#{$bits-utils-ns}u-cf:after {
  content: " ";
  clear: both;
  display: table;
}

/**
 * New block formatting context
 *
 * This affords some useful properties to the element. It won't wrap under
 * floats. Will also contain any floated children.

 * N.B. This will clip overflow. Use the alternative method below if this is
 * problematic.
 */

.#{$bits-utils-ns}u-nbfc {
  overflow: hidden !important;
}

/**
 * New block formatting context (alternative)
 *
 * Alternative method when overflow must not be clipped.
 *
 * 1. Create a new block formatting context (NBFC).
 * 2. Avoid shrink-wrap behaviour of table-cell.
 *
 * N.B. This breaks down in some browsers when elements within this element
 * exceed its width.
 */

.#{$bits-utils-ns}u-nbfcAlt {
  display: table-cell !important; /* 1 */
  width: 10000px !important; /* 2 */
}

/* -------------------------------------------------------------------------- */

/**
 * Float left
 *
 * Float the element left.
 */

.#{$bits-utils-ns}u-pullLeft {
  float: left !important;
}

/**
 * Float right
 *
 * Float the element right.
 */

.#{$bits-utils-ns}u-pullRight {
  float: right !important;
}

/* -------------------------------------------------------------------------- */

/**
 * Float object left
 *
 * Float an object left and include some space between the object and
 * proceeding objects.
 */

.#{$bits-utils-ns}u-objLeft {
  float: left !important;
  margin-right: $bits-layout-obj-margin !important;
}

/**
 * Float object right
 *
 * Float an object right and include some space between the object and
 * proceeding objects.
 */

.#{$bits-utils-ns}u-objRight {
  float: right !important;
  margin-left: $bits-layout-obj-margin !important;
}

/**
 * 1. Remove excess space below images
 * 2. Guard against `img {max-width:100%}` hiding this utility's images in
 *    IE 8.
 */

.#{$bits-utils-ns}u-objLeft img,
.#{$bits-utils-ns}u-objRight img {
  display: block !important; /* 1 */
  max-width: none !important; /* 2 */
}

/* -------------------------------------------------------------------------- */

/**
 * Vertical alignment
 *
 * Align element vertically to top.
 * Depends on an appropriate `display` value.
 */

.#{$bits-utils-ns}u-alignTop {
  vertical-align: top !important;
}

/**
 * Vertical alignment
 *
 * Align element vertically to middle.
 * Depends on an appropriate `display` value.
 */

.#{$bits-utils-ns}u-alignMiddle {
  vertical-align: middle !important;
}

/**
 * Vertical alignment
 *
 * Align element vertically to baseline.
 * Depends on an appropriate `display` value.
 */

.#{$bits-utils-ns}u-alignBaseline {
  vertical-align: baseline !important;
}

/**
 * Vertical alignment
 *
 * Align element vertically to bottom.
 * Depends on an appropriate `display` value.
 */

.#{$bits-utils-ns}u-alignBottom {
  vertical-align: bottom !important;
}